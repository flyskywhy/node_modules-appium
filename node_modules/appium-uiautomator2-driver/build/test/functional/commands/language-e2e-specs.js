'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

var _appiumAndroidDriver = require('appium-android-driver');

var _helpersHelpers = require('../helpers/helpers');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('Localization - locale @skip-ci @skip-real-device', function () {
  var _this = this;

  var initialLocale = undefined;

  before(function callee$1$0() {
    var adb;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          adb = new _appiumAdb2['default']();
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(adb.getApiLevel());

        case 3:
          context$2$0.t0 = context$2$0.sent;

          if (!(context$2$0.t0 > 23)) {
            context$2$0.next = 6;
            break;
          }

          return context$2$0.abrupt('return', this.skip());

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap((0, _helpersHelpers.getLocale)(adb));

        case 8:
          initialLocale = context$2$0.sent;

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  var driver = undefined;
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 5;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(_appiumAndroidDriver.androidHelpers.ensureDeviceLocale(driver.adb, null, initialLocale));

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should start as FR', function callee$1$0() {
    var frCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          frCaps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
            language: 'fr',
            locale: 'FR'
          });
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(frCaps));

        case 3:
          driver = context$2$0.sent;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap((0, _helpersHelpers.getLocale)(driver.adb).should.eventually.equal('fr-FR'));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should start as US', function callee$1$0() {
    var usCaps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          usCaps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
            language: 'en',
            locale: 'US'
          });
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(usCaps));

        case 3:
          driver = context$2$0.sent;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap((0, _helpersHelpers.getLocale)(driver.adb).should.eventually.equal('en-US'));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// restarting doesn't work on Android 7+
//eslint-disable-line curly
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9sYW5ndWFnZS1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O3lCQUM3QixZQUFZOzs7OzhCQUNELG9CQUFvQjs7dUJBQ2pCLFlBQVk7O21DQUNYLHVCQUF1Qjs7OEJBQzVCLG9CQUFvQjs7QUFHOUMsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsa0RBQWtELEVBQUUsWUFBWTs7O0FBQ3ZFLE1BQUksYUFBYSxZQUFBLENBQUM7O0FBRWxCLFFBQU0sQ0FBQztRQUVELEdBQUc7Ozs7QUFBSCxhQUFHLEdBQUcsNEJBQVM7OzJDQUNULEdBQUcsQ0FBQyxXQUFXLEVBQUU7Ozs7O2lDQUFHLEVBQUU7Ozs7OzhDQUFTLElBQUksQ0FBQyxJQUFJLEVBQUU7Ozs7MkNBRTlCLCtCQUFVLEdBQUcsQ0FBQzs7O0FBQXBDLHVCQUFhOzs7Ozs7O0dBQ2QsQ0FBQyxDQUFDOztBQUVILE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxPQUFLLENBQUM7Ozs7ZUFDQSxNQUFNOzs7Ozs7MkNBQ0Ysb0NBQWUsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsYUFBYSxDQUFDOzs7OzJDQUVsRSxNQUFNLENBQUMsYUFBYSxFQUFFOzs7Ozs7O0dBRS9CLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsb0JBQW9CLEVBQUU7UUFDbkIsTUFBTTs7OztBQUFOLGdCQUFNLEdBQUcsZUFBYyxFQUFFLDBCQUFpQjtBQUM1QyxvQkFBUSxFQUFFLElBQUk7QUFDZCxrQkFBTSxFQUFFLElBQUk7V0FDYixDQUFDOzsyQ0FDYSxnQ0FBVyxNQUFNLENBQUM7OztBQUFqQyxnQkFBTTs7MkNBQ0EsK0JBQVUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7Ozs7OztHQUM3RCxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsb0JBQW9CLEVBQUU7UUFDbkIsTUFBTTs7OztBQUFOLGdCQUFNLEdBQUcsZUFBYyxFQUFFLDBCQUFpQjtBQUM1QyxvQkFBUSxFQUFFLElBQUk7QUFDZCxrQkFBTSxFQUFFLElBQUk7V0FDYixDQUFDOzsyQ0FDYSxnQ0FBVyxNQUFNLENBQUM7OztBQUFqQyxnQkFBTTs7MkNBQ0EsK0JBQVUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7Ozs7OztHQUM3RCxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2NvbW1hbmRzL2xhbmd1YWdlLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0IEFEQiBmcm9tICdhcHBpdW0tYWRiJztcbmltcG9ydCB7IGluaXREcml2ZXIgfSBmcm9tICcuLi9oZWxwZXJzL3Nlc3Npb24nO1xuaW1wb3J0IHsgQVBJREVNT1NfQ0FQUyB9IGZyb20gJy4uL2Rlc2lyZWQnO1xuaW1wb3J0IHsgYW5kcm9pZEhlbHBlcnMgfSBmcm9tICdhcHBpdW0tYW5kcm9pZC1kcml2ZXInO1xuaW1wb3J0IHsgZ2V0TG9jYWxlIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgnTG9jYWxpemF0aW9uIC0gbG9jYWxlIEBza2lwLWNpIEBza2lwLXJlYWwtZGV2aWNlJywgZnVuY3Rpb24gKCkge1xuICBsZXQgaW5pdGlhbExvY2FsZTtcblxuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIC8vIHJlc3RhcnRpbmcgZG9lc24ndCB3b3JrIG9uIEFuZHJvaWQgNytcbiAgICBsZXQgYWRiID0gbmV3IEFEQigpO1xuICAgIGlmIChhd2FpdCBhZGIuZ2V0QXBpTGV2ZWwoKSA+IDIzKSByZXR1cm4gdGhpcy5za2lwKCk7IC8vZXNsaW50LWRpc2FibGUtbGluZSBjdXJseVxuXG4gICAgaW5pdGlhbExvY2FsZSA9IGF3YWl0IGdldExvY2FsZShhZGIpO1xuICB9KTtcblxuICBsZXQgZHJpdmVyO1xuICBhZnRlcihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGRyaXZlcikge1xuICAgICAgYXdhaXQgYW5kcm9pZEhlbHBlcnMuZW5zdXJlRGV2aWNlTG9jYWxlKGRyaXZlci5hZGIsIG51bGwsIGluaXRpYWxMb2NhbGUpO1xuXG4gICAgICBhd2FpdCBkcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICAgIH1cbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBzdGFydCBhcyBGUicsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgZnJDYXBzID0gT2JqZWN0LmFzc2lnbih7fSwgQVBJREVNT1NfQ0FQUywge1xuICAgICAgbGFuZ3VhZ2U6ICdmcicsXG4gICAgICBsb2NhbGU6ICdGUicsXG4gICAgfSk7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdERyaXZlcihmckNhcHMpO1xuICAgIGF3YWl0IGdldExvY2FsZShkcml2ZXIuYWRiKS5zaG91bGQuZXZlbnR1YWxseS5lcXVhbCgnZnItRlInKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgc3RhcnQgYXMgVVMnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IHVzQ2FwcyA9IE9iamVjdC5hc3NpZ24oe30sIEFQSURFTU9TX0NBUFMsIHtcbiAgICAgIGxhbmd1YWdlOiAnZW4nLFxuICAgICAgbG9jYWxlOiAnVVMnLFxuICAgIH0pO1xuICAgIGRyaXZlciA9IGF3YWl0IGluaXREcml2ZXIodXNDYXBzKTtcbiAgICBhd2FpdCBnZXRMb2NhbGUoZHJpdmVyLmFkYikuc2hvdWxkLmV2ZW50dWFsbHkuZXF1YWwoJ2VuLVVTJyk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
