'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _helpersEnv = require('./helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

var _helpersSession = require('./helpers/session');

var _helpersTitle = require('./helpers/title');

var _appiumBaseDriver = require('appium-base-driver');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _libLogger = require('../../lib/logger');

var _libLogger2 = _interopRequireDefault(_libLogger);

require('./helpers/setup_testlibs');

var server = undefined;

function startServer(session) {
  var router;
  return _regeneratorRuntime.async(function startServer$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        router = (0, _appiumBaseDriver.routeConfiguringFunction)(session.rawDriver);
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap((0, _appiumBaseDriver.server)(router, _helpersEnv2['default'].APPIUM_PORT, 'localhost'));

      case 3:
        server = context$1$0.sent;

        _libLogger2['default'].info('IosDriver server listening on http://localhost:' + _helpersEnv2['default'].APPIUM_PORT);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function setup(context, desired) {
  var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  var _this = this;

  var envOverrides = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
  var needsNewServer = arguments.length <= 4 || arguments[4] === undefined ? false : arguments[4];

  context.timeout(_helpersEnv2['default'].MOCHA_INIT_TIMEOUT);
  context.retries(2);
  var newEnv = _lodash2['default'].clone(_helpersEnv2['default']);
  if (envOverrides) {
    _lodash2['default'].extend(newEnv, envOverrides);
  }

  if (!opts.port) {
    opts.port = _helpersEnv2['default'].APPIUM_PORT;
  }

  opts.callbackAddress = 'localhost';

  var session = new _helpersSession.Session(desired, opts);
  var allPassed = true;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (server) {
            context$2$0.next = 5;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(startServer(session));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          if (!needsNewServer) {
            context$2$0.next = 10;
            break;
          }

          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(server.close());

        case 8:
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(startServer(session));

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(session.setUp((0, _helpersTitle.getTitle)(context)));

        case 12:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(session.tearDown(allPassed));

        case 2:
          if (!needsNewServer) {
            context$2$0.next = 5;
            break;
          }

          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(server.close());

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  afterEach(function () {
    allPassed = allPassed && this.currentTest.state === 'passed';
  });

  return session;
}

exports['default'] = setup;
module.exports = exports['default'];

// start the server before start the session, so startup can use it if necessary
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NldHVwLWJhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzswQkFDZ0IsZUFBZTs7Ozs4QkFDUCxtQkFBbUI7OzRCQUNsQixpQkFBaUI7O2dDQUNxQixvQkFBb0I7O3NCQUNyRSxRQUFROzs7O3lCQUNOLGtCQUFrQjs7OztRQUMzQiwwQkFBMEI7O0FBR2pDLElBQUksTUFBTSxZQUFBLENBQUM7O0FBRVgsU0FBZSxXQUFXLENBQUUsT0FBTztNQUU3QixNQUFNOzs7O0FBQU4sY0FBTSxHQUFHLGdEQUF5QixPQUFPLENBQUMsU0FBUyxDQUFDOzt5Q0FDekMsOEJBQVcsTUFBTSxFQUFFLHdCQUFJLFdBQVcsRUFBRSxXQUFXLENBQUM7OztBQUEvRCxjQUFNOztBQUNOLCtCQUFJLElBQUkscURBQW1ELHdCQUFJLFdBQVcsQ0FBRyxDQUFDOzs7Ozs7O0NBQy9FOztBQUVELFNBQVMsS0FBSyxDQUFFLE9BQU8sRUFBRSxPQUFPLEVBQTJEO01BQXpELElBQUkseURBQUcsRUFBRTs7OztNQUFFLFlBQVkseURBQUcsS0FBSztNQUFFLGNBQWMseURBQUcsS0FBSzs7QUFDdkYsU0FBTyxDQUFDLE9BQU8sQ0FBQyx3QkFBSSxrQkFBa0IsQ0FBQyxDQUFDO0FBQ3hDLFNBQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkIsTUFBSSxNQUFNLEdBQUcsb0JBQUUsS0FBSyx5QkFBSyxDQUFDO0FBQzFCLE1BQUksWUFBWSxFQUFFO0FBQ2hCLHdCQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7R0FDaEM7O0FBRUQsTUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFDZCxRQUFJLENBQUMsSUFBSSxHQUFHLHdCQUFJLFdBQVcsQ0FBQztHQUM3Qjs7QUFFRCxNQUFJLENBQUMsZUFBZSxHQUFHLFdBQVcsQ0FBQzs7QUFFbkMsTUFBSSxPQUFPLEdBQUcsNEJBQVksT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3pDLE1BQUksU0FBUyxHQUFHLElBQUksQ0FBQzs7QUFFckIsUUFBTSxDQUFDOzs7O2NBQ0EsTUFBTTs7Ozs7OzJDQUNILFdBQVcsQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7ZUFDakIsY0FBYzs7Ozs7OzJDQUNqQixNQUFNLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNkLFdBQVcsQ0FBQyxPQUFPLENBQUM7Ozs7MkNBRXRCLE9BQU8sQ0FBQyxLQUFLLENBQUMsNEJBQVMsT0FBTyxDQUFDLENBQUM7Ozs7Ozs7R0FDdkMsQ0FBQyxDQUFDOztBQUVILE9BQUssQ0FBQzs7Ozs7MkNBQ0UsT0FBTyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7OztlQUM3QixjQUFjOzs7Ozs7MkNBQ1YsTUFBTSxDQUFDLEtBQUssRUFBRTs7Ozs7OztHQUV2QixDQUFDLENBQUM7O0FBRUgsV0FBUyxDQUFDLFlBQVk7QUFDcEIsYUFBUyxHQUFHLFNBQVMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUM7R0FDOUQsQ0FBQyxDQUFDOztBQUVILFNBQU8sT0FBTyxDQUFDO0NBQ2hCOztxQkFFYyxLQUFLIiwiZmlsZSI6InRlc3QvZTJlL3NldHVwLWJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBlbnYgZnJvbSAnLi9oZWxwZXJzL2Vudic7XG5pbXBvcnQgeyBTZXNzaW9uIH0gZnJvbSAnLi9oZWxwZXJzL3Nlc3Npb24nO1xuaW1wb3J0IHsgZ2V0VGl0bGUgfSBmcm9tICcuL2hlbHBlcnMvdGl0bGUnO1xuaW1wb3J0IHsgc2VydmVyIGFzIGJhc2VTZXJ2ZXIsIHJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGxvZyBmcm9tICcuLi8uLi9saWIvbG9nZ2VyJztcbmltcG9ydCAnLi9oZWxwZXJzL3NldHVwX3Rlc3RsaWJzJztcblxuXG5sZXQgc2VydmVyO1xuXG5hc3luYyBmdW5jdGlvbiBzdGFydFNlcnZlciAoc2Vzc2lvbikge1xuICAvLyBzdGFydCB0aGUgc2VydmVyIGJlZm9yZSBzdGFydCB0aGUgc2Vzc2lvbiwgc28gc3RhcnR1cCBjYW4gdXNlIGl0IGlmIG5lY2Vzc2FyeVxuICBsZXQgcm91dGVyID0gcm91dGVDb25maWd1cmluZ0Z1bmN0aW9uKHNlc3Npb24ucmF3RHJpdmVyKTtcbiAgc2VydmVyID0gYXdhaXQgYmFzZVNlcnZlcihyb3V0ZXIsIGVudi5BUFBJVU1fUE9SVCwgJ2xvY2FsaG9zdCcpO1xuICBsb2cuaW5mbyhgSW9zRHJpdmVyIHNlcnZlciBsaXN0ZW5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke2Vudi5BUFBJVU1fUE9SVH1gKTtcbn1cblxuZnVuY3Rpb24gc2V0dXAgKGNvbnRleHQsIGRlc2lyZWQsIG9wdHMgPSB7fSwgZW52T3ZlcnJpZGVzID0gZmFsc2UsIG5lZWRzTmV3U2VydmVyID0gZmFsc2UpIHtcbiAgY29udGV4dC50aW1lb3V0KGVudi5NT0NIQV9JTklUX1RJTUVPVVQpO1xuICBjb250ZXh0LnJldHJpZXMoMik7XG4gIGxldCBuZXdFbnYgPSBfLmNsb25lKGVudik7XG4gIGlmIChlbnZPdmVycmlkZXMpIHtcbiAgICBfLmV4dGVuZChuZXdFbnYsIGVudk92ZXJyaWRlcyk7XG4gIH1cblxuICBpZiAoIW9wdHMucG9ydCkge1xuICAgIG9wdHMucG9ydCA9IGVudi5BUFBJVU1fUE9SVDtcbiAgfVxuXG4gIG9wdHMuY2FsbGJhY2tBZGRyZXNzID0gJ2xvY2FsaG9zdCc7XG5cbiAgbGV0IHNlc3Npb24gPSBuZXcgU2Vzc2lvbihkZXNpcmVkLCBvcHRzKTtcbiAgbGV0IGFsbFBhc3NlZCA9IHRydWU7XG5cbiAgYmVmb3JlKGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXNlcnZlcikge1xuICAgICAgYXdhaXQgc3RhcnRTZXJ2ZXIoc2Vzc2lvbik7XG4gICAgfSBlbHNlIGlmIChuZWVkc05ld1NlcnZlcikge1xuICAgICAgYXdhaXQgc2VydmVyLmNsb3NlKCk7XG4gICAgICBhd2FpdCBzdGFydFNlcnZlcihzZXNzaW9uKTtcbiAgICB9XG4gICAgYXdhaXQgc2Vzc2lvbi5zZXRVcChnZXRUaXRsZShjb250ZXh0KSk7XG4gIH0pO1xuXG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBzZXNzaW9uLnRlYXJEb3duKGFsbFBhc3NlZCk7XG4gICAgaWYgKG5lZWRzTmV3U2VydmVyKSB7XG4gICAgICBhd2FpdCBzZXJ2ZXIuY2xvc2UoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGFmdGVyRWFjaChmdW5jdGlvbiAoKSB7XG4gICAgYWxsUGFzc2VkID0gYWxsUGFzc2VkICYmIHRoaXMuY3VycmVudFRlc3Quc3RhdGUgPT09ICdwYXNzZWQnO1xuICB9KTtcblxuICByZXR1cm4gc2Vzc2lvbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2V0dXA7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
