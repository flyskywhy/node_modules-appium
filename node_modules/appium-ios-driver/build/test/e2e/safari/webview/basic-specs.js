/* globals expect */
'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _desired = require('./desired');

var _desired2 = _interopRequireDefault(_desired);

var _safariSetup = require('../safari-setup');

var _safariSetup2 = _interopRequireDefault(_safariSetup);

var _helpersWebview = require('../../helpers/webview');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _helpersSession = require('../../helpers/session');

var _helpersEnv = require('../../helpers/env');

var _helpersEnv2 = _interopRequireDefault(_helpersEnv);

describe('safari - webview ', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_SAFARI_TIMEOUT);

  describe('basics', function () {
    var driver = (0, _safariSetup2['default'])(_this, _desired2['default']).driver;

    describe('context', function () {
      var _this2 = this;

      it('getting current context should work initially', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(500));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.getCurrentContext());

            case 4:
              context$4$0.sent.should.be.ok;

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this2);
      });
    });

    describe('implicit wait', function () {
      var _this3 = this;

      it('should set the implicit wait for finding web elements', function callee$3$0() {
        var before, hasThrown, after;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.implicitWait(7 * 1000));

            case 2:
              before = new Date().getTime() / 1000;
              hasThrown = false;
              context$4$0.prev = 4;
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.findElement('tag name', 'notgonnabethere'));

            case 7:
              context$4$0.next = 12;
              break;

            case 9:
              context$4$0.prev = 9;
              context$4$0.t0 = context$4$0['catch'](4);

              hasThrown = true;

            case 12:
              context$4$0.prev = 12;

              hasThrown.should.be.ok;
              return context$4$0.finish(12);

            case 15:
              after = new Date().getTime() / 1000;

              (after - before > 7).should.be.ok;
              context$4$0.next = 19;
              return _regeneratorRuntime.awrap(driver.implicitWait(0));

            case 19:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this3, [[4, 9, 12, 15]]);
      });
    });

    describe('window title', function () {
      var _this4 = this;

      beforeEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this4);
      });

      it('should return a valid title on web view', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.title());

            case 2:
              context$4$0.sent.should.include("I am a page title");

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this4);
      });
    });

    describe('element handling', function () {
      var _this5 = this;

      beforeEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(_desired2['default'], driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should find a web element in the web view', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

            case 2:
              context$4$0.sent.should.exist;

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should find multiple web elements in the web view', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElements('tag name', 'a'));

            case 2:
              context$4$0.sent.should.have.length.above(0);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should fail gracefully to find multiple missing web elements in the web view', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElements('tag name', 'blar'));

            case 2:
              context$4$0.sent.should.have.length(0);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should find element from another element', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('class name', 'border'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.findElementFromElement('xpath', './form', el));

            case 5:
              context$4$0.sent.should.exist;

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should be able to click links', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.click(el));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)('I am another page title', driver));

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should retrieve an element attribute', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.getAttribute('id', el));

            case 5:
              context$4$0.sent.should.be.equal('i_am_an_id');
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.getAttribute('blar', el));

            case 8:
              context$4$0.t0 = context$4$0.sent;
              expect(context$4$0.t0).to.be['null'];

            case 10:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should retrieve implicit attributes', function callee$3$0() {
        var els;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElements('tag name', 'option'));

            case 2:
              els = context$4$0.sent;

              els.should.have.length(3);

              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.getAttribute('index', els[2]));

            case 6:
              context$4$0.sent.should.be.equal('2');

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should retrieve an element text', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.getText(el));

            case 5:
              context$4$0.sent.should.be.equal('I am a div');

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it.skip('should check if two elements are equals', function callee$3$0() {
        var el1, el2;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

            case 2:
              el1 = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.findElement('css selector', '#i_am_an_id'));

            case 5:
              el2 = context$4$0.sent;

              el1.should.be.equal(el2);

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return the page source', function callee$3$0() {
        var source;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.getPageSource());

            case 2:
              source = context$4$0.sent;

              source.should.include('<html');
              source.should.include('I am a page title');
              source.should.include('i appear 3 times');
              source.should.include('</html>');

            case 7:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should get current url', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.getUrl());

            case 2:
              context$4$0.sent.should.include('test/guinea-pig');

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should get updated URL without breaking window handles', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am an anchor link'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.click(el));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.getUrl());

            case 7:
              context$4$0.sent.should.contain('#anchor');
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.getWindowHandles());

            case 10:
              context$4$0.sent.should.be.ok;

            case 11:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should send keystrokes to specific element', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.clear(el));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.setValue('hello world', el));

            case 7:
              context$4$0.next = 9;
              return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

            case 9:
              context$4$0.sent.should.be.equal('hello world');

            case 10:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should send keystrokes to active element', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.clear(el));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.click(el));

            case 7:
              context$4$0.next = 9;
              return _regeneratorRuntime.awrap(driver.keys('hello world'));

            case 9:
              context$4$0.next = 11;
              return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

            case 11:
              context$4$0.sent.should.be.equal('hello world');

            case 12:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should clear element', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.setValue('hello world', el));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

            case 7:
              context$4$0.sent.should.have.length.above(0);
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.clear(el));

            case 10:
              context$4$0.next = 12;
              return _regeneratorRuntime.awrap(driver.getAttribute('value', el));

            case 12:
              context$4$0.sent.should.be.equal('');

            case 13:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should say whether an input is selected', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'unchecked_checkbox'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.elementSelected(el));

            case 5:
              context$4$0.sent.should.not.be.ok;
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.click(el));

            case 8:
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.elementSelected(el));

            case 10:
              context$4$0.sent.should.be.ok;

            case 11:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should be able to retrieve css properties', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.getCssProperty('background-color', el.ELEMENT));

            case 5:
              context$4$0.sent.should.be.equal('rgba(255, 255, 255, 1)');

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should retrieve an element size', function callee$3$0() {
        var el, size;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_an_id'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.getSize(el));

            case 5:
              size = context$4$0.sent;

              size.width.should.be.above(0);
              size.height.should.be.above(0);

            case 8:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should get location of an element', function callee$3$0() {
        var el, loc;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.getLocation(el));

            case 5:
              loc = context$4$0.sent;

              loc.x.should.be.above(0);
              loc.y.should.be.above(0);

            case 8:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      /**
       * getTagName not supported by mjwp
       */
      it.skip('should retrieve tag name of an element', function callee$3$0() {
        var el, a;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.findElement('css selector', 'a'));

            case 5:
              a = context$4$0.sent;
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.getTagName(el));

            case 8:
              context$4$0.sent.should.be.equal('input');
              context$4$0.next = 11;
              return _regeneratorRuntime.awrap(driver.getTagName(a));

            case 11:
              context$4$0.sent.should.be.equal('a');

            case 12:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should retrieve a window size', function callee$3$0() {
        var size;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.getWindowSize());

            case 2:
              size = context$4$0.sent;

              size.height.should.be.above(0);
              size.width.should.be.above(0);

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should move to an arbitrary x-y element and click on it', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.moveTo(el, 5, 15));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.click(el));

            case 7:
              context$4$0.next = 9;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinTitle)('I am another page title', driver));

            case 9:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should submit a form', function callee$3$0() {
        var el, form;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          var _this6 = this;

          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'comments'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'jumpContact'));

            case 5:
              form = context$4$0.sent;
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.setValue('This is a comment', el));

            case 8:
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.submit(form.ELEMENT));

            case 10:
              context$4$0.next = 12;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$4$0() {
                var el;
                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(driver.findElement('id', 'your_comments'));

                    case 2:
                      el = context$5$0.sent;
                      context$5$0.next = 5;
                      return _regeneratorRuntime.awrap(driver.getText(el));

                    case 5:
                      context$5$0.sent.should.be.equal('Your comments: This is a comment');

                    case 6:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, _this6);
              }));

            case 12:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return true when the element is displayed', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.elementDisplayed(el));

            case 5:
              context$4$0.sent.should.be.ok;

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return false when the element is not displayed', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'invisible div'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.elementDisplayed(el));

            case 5:
              context$4$0.sent.should.not.be.ok;

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return true when the element is enabled', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('link text', 'i am a link'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.elementEnabled(el));

            case 5:
              context$4$0.sent.should.be.ok;

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return false when the element is not enabled', function callee$3$0() {
        var el;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'fbemail'));

            case 2:
              el = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.execute('$(\'#fbemail\').attr(\'disabled\', \'disabled\');'));

            case 5:
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(driver.elementEnabled(el));

            case 7:
              context$4$0.sent.should.not.be.ok;

            case 8:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should return the active element', function callee$3$0() {
        var testText, el, activeEl;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              testText = 'hi there';
              context$4$0.next = 3;
              return _regeneratorRuntime.awrap(driver.findElement('id', 'i_am_a_textbox'));

            case 3:
              el = context$4$0.sent;
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.setValue(testText, el));

            case 6:
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.active());

            case 8:
              activeEl = context$4$0.sent;
              context$4$0.next = 11;
              return _regeneratorRuntime.awrap(driver.getAttribute('value', activeEl));

            case 11:
              context$4$0.t0 = testText;
              context$4$0.sent.should.be.equal(context$4$0.t0);

            case 13:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should properly navigate to anchor', function callee$3$0() {
        var curl;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.getUrl());

            case 2:
              curl = context$4$0.sent;
              context$4$0.next = 5;
              return _regeneratorRuntime.awrap(driver.setUrl(curl));

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });

      it('should be able to refresh', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.refresh());

            case 2:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this5);
      });
    });
  });

  describe('safariIgnoreFraudWarning', function () {
    describe('true', function () {
      var _this7 = this;

      var specialCaps = _Object$assign({}, _desired2['default']);
      specialCaps.safariIgnoreFraudWarning = true;

      var driver = (0, _safariSetup2['default'])(this, specialCaps).driver;
      before(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(specialCaps, driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this7);
      });

      // iOS8 currently does not disable the phishing warning for foo:bar@ type
      // addresses, even when running the sim manually
      // TODO: find another way to trigger the phishing warning that IS disabled
      // by the pref on iOS8
      it('should not display a phishing warning with safariIgnoreFraudWarning @skip-ios8', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          var _this8 = this;

          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].PHISHING_END_POINT + 'guinea-pig2.html'));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$4$0() {
                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(driver.getTitle());

                    case 2:
                      context$5$0.sent.should.contain("I am another page title");

                    case 3:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, _this8);
              }));

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this7);
      });
    });

    describe('false', function () {
      var _this9 = this;

      var specialCaps = _Object$assign({}, _desired2['default']);
      specialCaps.safariIgnoreFraudWarning = false;

      var driver = (0, _safariSetup2['default'])(this, specialCaps).driver;
      before(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(specialCaps, driver));

            case 2:
              return context$4$0.abrupt('return', context$4$0.sent);

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this9);
      });

      // iOS8 currently does not disable the phishing warning for foo:bar@ type
      // addresses, even when running the sim manually
      // TODO: find another way to trigger the phishing warning that IS disabled
      // by the pref on iOS8
      it('should display a phishing warning with safariIgnoreFraudWarning @skip-ios8', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          var _this10 = this;

          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.setUrl(_helpersEnv2['default'].PHISHING_END_POINT + 'guinea-pig2.html'));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _helpersWebview.spinWait)(function callee$4$0() {
                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(driver.getTitle());

                    case 2:
                      context$5$0.sent.toLowerCase().should.contain("phishing");

                    case 3:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, _this10);
              }));

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this9);
      });
    });
  });

  describe('enablePerformanceLogging', function () {
    var _this11 = this;

    var specialCaps = _Object$assign({ enablePerformanceLogging: true }, _desired2['default']);

    var driver = (0, _safariSetup2['default'])(this, specialCaps).driver;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpersWebview.loadWebView)(specialCaps, driver));

          case 2:
            return context$3$0.abrupt('return', context$3$0.sent);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this11);
    });

    it('should be able to get the performance logs', function callee$2$0() {
      var logTypes, logs;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.getLogTypes());

          case 2:
            logTypes = context$3$0.sent;

            logTypes.should.include('performance');

            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getLog('performance'));

          case 6:
            logs = context$3$0.sent;

            logs.should.be.an['instanceof'](Array);
            logs.length.should.be.above(0);

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this11);
    });
  });
});

/**
 * we have to use try catch to actually halt the process here
 */
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL3NhZmFyaS93ZWJ2aWV3L2Jhc2ljLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozt1QkFDb0IsV0FBVzs7OzsyQkFDYixpQkFBaUI7Ozs7OEJBQ2MsdUJBQXVCOzt3QkFDMUQsVUFBVTs7Ozs4QkFDYSx1QkFBdUI7OzBCQUM1QyxtQkFBbUI7Ozs7QUFHbkMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLFlBQVk7OztBQUN4QyxNQUFJLENBQUMsT0FBTyxzQ0FBc0IsQ0FBQzs7QUFFbkMsVUFBUSxDQUFDLFFBQVEsRUFBRSxZQUFNO0FBQ3ZCLFFBQU0sTUFBTSxHQUFHLDBEQUFvQixDQUFDLE1BQU0sQ0FBQzs7QUFFM0MsWUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZOzs7QUFDOUIsUUFBRSxDQUFDLCtDQUErQyxFQUFFOzs7OzsrQ0FDNUMsc0JBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQzs7OzsrQ0FDWCxNQUFNLENBQUMsaUJBQWlCLEVBQUU7OzsrQkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7Ozs7Ozs7T0FDaEQsQ0FBQyxDQUFDO0tBQ0osQ0FBQyxDQUFDOztBQUVILFlBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBWTs7O0FBQ3BDLFFBQUUsQ0FBQyx1REFBdUQsRUFBRTtZQUd0RCxNQUFNLEVBQ04sU0FBUyxFQWFULEtBQUs7Ozs7OytDQWhCSCxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7OztBQUUvQixvQkFBTSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSTtBQUNwQyx1QkFBUyxHQUFHLEtBQUs7OzsrQ0FNYixNQUFNLENBQUMsV0FBVyxDQUFDLFVBQVUsRUFBRSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7OztBQUV2RCx1QkFBUyxHQUFHLElBQUksQ0FBQzs7Ozs7QUFFakIsdUJBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQzs7OztBQUdy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d2Vidmlldy9iYXNpYy1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgZXhwZWN0ICovXG5pbXBvcnQgZGVzaXJlZCBmcm9tICcuL2Rlc2lyZWQnO1xuaW1wb3J0IHNldHVwIGZyb20gJy4uL3NhZmFyaS1zZXR1cCc7XG5pbXBvcnQgeyBsb2FkV2ViVmlldywgc3BpblRpdGxlLCBzcGluV2FpdCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvd2Vidmlldyc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgeyBNT0NIQV9TQUZBUklfVElNRU9VVCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgZW52IGZyb20gJy4uLy4uL2hlbHBlcnMvZW52JztcblxuXG5kZXNjcmliZSgnc2FmYXJpIC0gd2VidmlldyAnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dChNT0NIQV9TQUZBUklfVElNRU9VVCk7XG5cbiAgZGVzY3JpYmUoJ2Jhc2ljcycsICgpID0+IHtcbiAgICBjb25zdCBkcml2ZXIgPSBzZXR1cCh0aGlzLCBkZXNpcmVkKS5kcml2ZXI7XG5cbiAgICBkZXNjcmliZSgnY29udGV4dCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGl0KCdnZXR0aW5nIGN1cnJlbnQgY29udGV4dCBzaG91bGQgd29yayBpbml0aWFsbHknLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IEIuZGVsYXkoNTAwKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRDdXJyZW50Q29udGV4dCgpKS5zaG91bGQuYmUub2s7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCdpbXBsaWNpdCB3YWl0JywgZnVuY3Rpb24gKCkge1xuICAgICAgaXQoJ3Nob3VsZCBzZXQgdGhlIGltcGxpY2l0IHdhaXQgZm9yIGZpbmRpbmcgd2ViIGVsZW1lbnRzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBkcml2ZXIuaW1wbGljaXRXYWl0KDcgKiAxMDAwKTtcblxuICAgICAgICBsZXQgYmVmb3JlID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgICAgICBsZXQgaGFzVGhyb3duID0gZmFsc2U7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHdlIGhhdmUgdG8gdXNlIHRyeSBjYXRjaCB0byBhY3R1YWxseSBoYWx0IHRoZSBwcm9jZXNzIGhlcmVcbiAgICAgICAgICovXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCd0YWcgbmFtZScsICdub3Rnb25uYWJldGhlcmUnKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGhhc1Rocm93biA9IHRydWU7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaGFzVGhyb3duLnNob3VsZC5iZS5vaztcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBhZnRlciA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMDtcbiAgICAgICAgKChhZnRlciAtIGJlZm9yZSkgPiA3KS5zaG91bGQuYmUub2s7XG4gICAgICAgIGF3YWl0IGRyaXZlci5pbXBsaWNpdFdhaXQoMCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCd3aW5kb3cgdGl0bGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IGF3YWl0IGxvYWRXZWJWaWV3KGRlc2lyZWQsIGRyaXZlcikpO1xuXG4gICAgICBpdCgnc2hvdWxkIHJldHVybiBhIHZhbGlkIHRpdGxlIG9uIHdlYiB2aWV3JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoYXdhaXQgZHJpdmVyLnRpdGxlKCkpLnNob3VsZC5pbmNsdWRlKFwiSSBhbSBhIHBhZ2UgdGl0bGVcIik7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCdlbGVtZW50IGhhbmRsaW5nJywgZnVuY3Rpb24gKCkge1xuICAgICAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhkZXNpcmVkLCBkcml2ZXIpKTtcblxuICAgICAgaXQoJ3Nob3VsZCBmaW5kIGEgd2ViIGVsZW1lbnQgaW4gdGhlIHdlYiB2aWV3JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdpX2FtX2FuX2lkJykpLnNob3VsZC5leGlzdDtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIGZpbmQgbXVsdGlwbGUgd2ViIGVsZW1lbnRzIGluIHRoZSB3ZWIgdmlldycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5maW5kRWxlbWVudHMoJ3RhZyBuYW1lJywgJ2EnKSkuc2hvdWxkLmhhdmUubGVuZ3RoLmFib3ZlKDApO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgZmFpbCBncmFjZWZ1bGx5IHRvIGZpbmQgbXVsdGlwbGUgbWlzc2luZyB3ZWIgZWxlbWVudHMgaW4gdGhlIHdlYiB2aWV3JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50cygndGFnIG5hbWUnLCAnYmxhcicpKS5zaG91bGQuaGF2ZS5sZW5ndGgoMCk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBmaW5kIGVsZW1lbnQgZnJvbSBhbm90aGVyIGVsZW1lbnQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnY2xhc3MgbmFtZScsICdib3JkZXInKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5maW5kRWxlbWVudEZyb21FbGVtZW50KCd4cGF0aCcsICcuL2Zvcm0nLCBlbCkpLnNob3VsZC5leGlzdDtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gY2xpY2sgbGlua3MnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnbGluayB0ZXh0JywgJ2kgYW0gYSBsaW5rJyk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5jbGljayhlbCk7XG4gICAgICAgIGF3YWl0IHNwaW5UaXRsZSgnSSBhbSBhbm90aGVyIHBhZ2UgdGl0bGUnLCBkcml2ZXIpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgcmV0cmlldmUgYW4gZWxlbWVudCBhdHRyaWJ1dGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnaV9hbV9hbl9pZCcpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgnaWQnLCBlbCkpLnNob3VsZC5iZS5lcXVhbCgnaV9hbV9hbl9pZCcpO1xuICAgICAgICBleHBlY3QoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgnYmxhcicsIGVsKSkudG8uYmUubnVsbDtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHJldHJpZXZlIGltcGxpY2l0IGF0dHJpYnV0ZXMnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbHMgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnRzKCd0YWcgbmFtZScsICdvcHRpb24nKTtcbiAgICAgICAgZWxzLnNob3VsZC5oYXZlLmxlbmd0aCgzKTtcblxuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgnaW5kZXgnLCBlbHNbMl0pKS5zaG91bGQuYmUuZXF1YWwoJzInKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHJldHJpZXZlIGFuIGVsZW1lbnQgdGV4dCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdpX2FtX2FuX2lkJyk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VGV4dChlbCkpLnNob3VsZC5iZS5lcXVhbCgnSSBhbSBhIGRpdicpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0LnNraXAoJ3Nob3VsZCBjaGVjayBpZiB0d28gZWxlbWVudHMgYXJlIGVxdWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsMSA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnaV9hbV9hbl9pZCcpO1xuICAgICAgICBsZXQgZWwyID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdjc3Mgc2VsZWN0b3InLCAnI2lfYW1fYW5faWQnKTtcbiAgICAgICAgZWwxLnNob3VsZC5iZS5lcXVhbChlbDIpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgcmV0dXJuIHRoZSBwYWdlIHNvdXJjZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IHNvdXJjZSA9IGF3YWl0IGRyaXZlci5nZXRQYWdlU291cmNlKCk7XG4gICAgICAgIHNvdXJjZS5zaG91bGQuaW5jbHVkZSgnPGh0bWwnKTtcbiAgICAgICAgc291cmNlLnNob3VsZC5pbmNsdWRlKCdJIGFtIGEgcGFnZSB0aXRsZScpO1xuICAgICAgICBzb3VyY2Uuc2hvdWxkLmluY2x1ZGUoJ2kgYXBwZWFyIDMgdGltZXMnKTtcbiAgICAgICAgc291cmNlLnNob3VsZC5pbmNsdWRlKCc8L2h0bWw+Jyk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBnZXQgY3VycmVudCB1cmwnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VXJsKCkpLnNob3VsZC5pbmNsdWRlKCd0ZXN0L2d1aW5lYS1waWcnKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIGdldCB1cGRhdGVkIFVSTCB3aXRob3V0IGJyZWFraW5nIHdpbmRvdyBoYW5kbGVzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2xpbmsgdGV4dCcsICdpIGFtIGFuIGFuY2hvciBsaW5rJyk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5jbGljayhlbCk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VXJsKCkpLnNob3VsZC5jb250YWluKCcjYW5jaG9yJyk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0V2luZG93SGFuZGxlcygpKS5zaG91bGQuYmUub2s7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBzZW5kIGtleXN0cm9rZXMgdG8gc3BlY2lmaWMgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdjb21tZW50cycpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xlYXIoZWwpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VmFsdWUoJ2hlbGxvIHdvcmxkJywgZWwpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgndmFsdWUnLCBlbCkpLnNob3VsZC5iZS5lcXVhbCgnaGVsbG8gd29ybGQnKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHNlbmQga2V5c3Ryb2tlcyB0byBhY3RpdmUgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdjb21tZW50cycpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xlYXIoZWwpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwpO1xuICAgICAgICBhd2FpdCBkcml2ZXIua2V5cygnaGVsbG8gd29ybGQnKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgZWwpKS5zaG91bGQuYmUuZXF1YWwoJ2hlbGxvIHdvcmxkJyk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBjbGVhciBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2NvbW1lbnRzJyk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5zZXRWYWx1ZSgnaGVsbG8gd29ybGQnLCBlbCk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0QXR0cmlidXRlKCd2YWx1ZScsIGVsKSkuc2hvdWxkLmhhdmUubGVuZ3RoLmFib3ZlKDApO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xlYXIoZWwpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgndmFsdWUnLCBlbCkpLnNob3VsZC5iZS5lcXVhbCgnJyk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBzYXkgd2hldGhlciBhbiBpbnB1dCBpcyBzZWxlY3RlZCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICd1bmNoZWNrZWRfY2hlY2tib3gnKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5lbGVtZW50U2VsZWN0ZWQoZWwpKS5zaG91bGQubm90LmJlLm9rO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmVsZW1lbnRTZWxlY3RlZChlbCkpLnNob3VsZC5iZS5vaztcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gcmV0cmlldmUgY3NzIHByb3BlcnRpZXMnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnZmJlbWFpbCcpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldENzc1Byb3BlcnR5KCdiYWNrZ3JvdW5kLWNvbG9yJywgZWwuRUxFTUVOVCkpLnNob3VsZC5iZS5lcXVhbCgncmdiYSgyNTUsIDI1NSwgMjU1LCAxKScpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgcmV0cmlldmUgYW4gZWxlbWVudCBzaXplJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2lfYW1fYW5faWQnKTtcbiAgICAgICAgbGV0IHNpemUgPSBhd2FpdCBkcml2ZXIuZ2V0U2l6ZShlbCk7XG4gICAgICAgIHNpemUud2lkdGguc2hvdWxkLmJlLmFib3ZlKDApO1xuICAgICAgICBzaXplLmhlaWdodC5zaG91bGQuYmUuYWJvdmUoMCk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBnZXQgbG9jYXRpb24gb2YgYW4gZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdmYmVtYWlsJyk7XG4gICAgICAgIGxldCBsb2MgPSBhd2FpdCBkcml2ZXIuZ2V0TG9jYXRpb24oZWwpO1xuICAgICAgICBsb2MueC5zaG91bGQuYmUuYWJvdmUoMCk7XG4gICAgICAgIGxvYy55LnNob3VsZC5iZS5hYm92ZSgwKTtcbiAgICAgIH0pO1xuXG4gICAgICAvKipcbiAgICAgICAqIGdldFRhZ05hbWUgbm90IHN1cHBvcnRlZCBieSBtandwXG4gICAgICAgKi9cbiAgICAgIGl0LnNraXAoJ3Nob3VsZCByZXRyaWV2ZSB0YWcgbmFtZSBvZiBhbiBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2ZiZW1haWwnKTtcbiAgICAgICAgbGV0IGEgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2NzcyBzZWxlY3RvcicsICdhJyk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VGFnTmFtZShlbCkpLnNob3VsZC5iZS5lcXVhbCgnaW5wdXQnKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRUYWdOYW1lKGEpKS5zaG91bGQuYmUuZXF1YWwoJ2EnKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHJldHJpZXZlIGEgd2luZG93IHNpemUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBzaXplID0gYXdhaXQgZHJpdmVyLmdldFdpbmRvd1NpemUoKTtcbiAgICAgICAgc2l6ZS5oZWlnaHQuc2hvdWxkLmJlLmFib3ZlKDApO1xuICAgICAgICBzaXplLndpZHRoLnNob3VsZC5iZS5hYm92ZSgwKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIG1vdmUgdG8gYW4gYXJiaXRyYXJ5IHgteSBlbGVtZW50IGFuZCBjbGljayBvbiBpdCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdsaW5rIHRleHQnLCAnaSBhbSBhIGxpbmsnKTtcbiAgICAgICAgYXdhaXQgZHJpdmVyLm1vdmVUbyhlbCwgNSwgMTUpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuY2xpY2soZWwpO1xuICAgICAgICBhd2FpdCBzcGluVGl0bGUoJ0kgYW0gYW5vdGhlciBwYWdlIHRpdGxlJywgZHJpdmVyKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnc2hvdWxkIHN1Ym1pdCBhIGZvcm0nLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAnY29tbWVudHMnKTtcbiAgICAgICAgbGV0IGZvcm0gPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoJ2lkJywgJ2p1bXBDb250YWN0Jyk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5zZXRWYWx1ZSgnVGhpcyBpcyBhIGNvbW1lbnQnLCBlbCk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5zdWJtaXQoZm9ybS5FTEVNRU5UKTtcbiAgICAgICAgYXdhaXQgc3BpbldhaXQoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnaWQnLCAneW91cl9jb21tZW50cycpO1xuICAgICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VGV4dChlbCkpLnNob3VsZC5iZS5lcXVhbCgnWW91ciBjb21tZW50czogVGhpcyBpcyBhIGNvbW1lbnQnKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gdHJ1ZSB3aGVuIHRoZSBlbGVtZW50IGlzIGRpc3BsYXllZCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdsaW5rIHRleHQnLCAnaSBhbSBhIGxpbmsnKTtcbiAgICAgICAgKGF3YWl0IGRyaXZlci5lbGVtZW50RGlzcGxheWVkKGVsKSkuc2hvdWxkLmJlLm9rO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgcmV0dXJuIGZhbHNlIHdoZW4gdGhlIGVsZW1lbnQgaXMgbm90IGRpc3BsYXllZCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdpbnZpc2libGUgZGl2Jyk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZWxlbWVudERpc3BsYXllZChlbCkpLnNob3VsZC5ub3QuYmUub2s7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gdHJ1ZSB3aGVuIHRoZSBlbGVtZW50IGlzIGVuYWJsZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5maW5kRWxlbWVudCgnbGluayB0ZXh0JywgJ2kgYW0gYSBsaW5rJyk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZWxlbWVudEVuYWJsZWQoZWwpKS5zaG91bGQuYmUub2s7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCByZXR1cm4gZmFsc2Ugd2hlbiB0aGUgZWxlbWVudCBpcyBub3QgZW5hYmxlZCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdmYmVtYWlsJyk7XG4gICAgICAgIGF3YWl0IGRyaXZlci5leGVjdXRlKGAkKCcjZmJlbWFpbCcpLmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7YCk7XG4gICAgICAgIChhd2FpdCBkcml2ZXIuZWxlbWVudEVuYWJsZWQoZWwpKS5zaG91bGQubm90LmJlLm9rO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgcmV0dXJuIHRoZSBhY3RpdmUgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IHRlc3RUZXh0ID0gJ2hpIHRoZXJlJztcbiAgICAgICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbGVtZW50KCdpZCcsICdpX2FtX2FfdGV4dGJveCcpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VmFsdWUodGVzdFRleHQsIGVsKTtcbiAgICAgICAgbGV0IGFjdGl2ZUVsID0gYXdhaXQgZHJpdmVyLmFjdGl2ZSgpO1xuICAgICAgICAoYXdhaXQgZHJpdmVyLmdldEF0dHJpYnV0ZSgndmFsdWUnLCBhY3RpdmVFbCkpLnNob3VsZC5iZS5lcXVhbCh0ZXN0VGV4dCk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ3Nob3VsZCBwcm9wZXJseSBuYXZpZ2F0ZSB0byBhbmNob3InLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBjdXJsID0gYXdhaXQgZHJpdmVyLmdldFVybCgpO1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VXJsKGN1cmwpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdzaG91bGQgYmUgYWJsZSB0byByZWZyZXNoJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBkcml2ZXIucmVmcmVzaCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdzYWZhcmlJZ25vcmVGcmF1ZFdhcm5pbmcnLCBmdW5jdGlvbiAoKSB7XG4gICAgZGVzY3JpYmUoJ3RydWUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBsZXQgc3BlY2lhbENhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBkZXNpcmVkKTtcbiAgICAgIHNwZWNpYWxDYXBzLnNhZmFyaUlnbm9yZUZyYXVkV2FybmluZyA9IHRydWU7XG5cbiAgICAgIGNvbnN0IGRyaXZlciA9IHNldHVwKHRoaXMsIHNwZWNpYWxDYXBzKS5kcml2ZXI7XG4gICAgICBiZWZvcmUoYXN5bmMgKCkgPT4gYXdhaXQgbG9hZFdlYlZpZXcoc3BlY2lhbENhcHMsIGRyaXZlcikpO1xuXG4gICAgICAvLyBpT1M4IGN1cnJlbnRseSBkb2VzIG5vdCBkaXNhYmxlIHRoZSBwaGlzaGluZyB3YXJuaW5nIGZvciBmb286YmFyQCB0eXBlXG4gICAgICAvLyBhZGRyZXNzZXMsIGV2ZW4gd2hlbiBydW5uaW5nIHRoZSBzaW0gbWFudWFsbHlcbiAgICAgIC8vIFRPRE86IGZpbmQgYW5vdGhlciB3YXkgdG8gdHJpZ2dlciB0aGUgcGhpc2hpbmcgd2FybmluZyB0aGF0IElTIGRpc2FibGVkXG4gICAgICAvLyBieSB0aGUgcHJlZiBvbiBpT1M4XG4gICAgICBpdCgnc2hvdWxkIG5vdCBkaXNwbGF5IGEgcGhpc2hpbmcgd2FybmluZyB3aXRoIHNhZmFyaUlnbm9yZUZyYXVkV2FybmluZyBAc2tpcC1pb3M4JywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBkcml2ZXIuc2V0VXJsKGVudi5QSElTSElOR19FTkRfUE9JTlQgKyAnZ3VpbmVhLXBpZzIuaHRtbCcpO1xuICAgICAgICBhd2FpdCBzcGluV2FpdChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgKGF3YWl0IGRyaXZlci5nZXRUaXRsZSgpKS5zaG91bGQuY29udGFpbihcIkkgYW0gYW5vdGhlciBwYWdlIHRpdGxlXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ2ZhbHNlJywgZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IHNwZWNpYWxDYXBzID0gT2JqZWN0LmFzc2lnbih7fSwgZGVzaXJlZCk7XG4gICAgICBzcGVjaWFsQ2Fwcy5zYWZhcmlJZ25vcmVGcmF1ZFdhcm5pbmcgPSBmYWxzZTtcblxuICAgICAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywgc3BlY2lhbENhcHMpLmRyaXZlcjtcbiAgICAgIGJlZm9yZShhc3luYyAoKSA9PiBhd2FpdCBsb2FkV2ViVmlldyhzcGVjaWFsQ2FwcywgZHJpdmVyKSk7XG5cbiAgICAgIC8vIGlPUzggY3VycmVudGx5IGRvZXMgbm90IGRpc2FibGUgdGhlIHBoaXNoaW5nIHdhcm5pbmcgZm9yIGZvbzpiYXJAIHR5cGVcbiAgICAgIC8vIGFkZHJlc3NlcywgZXZlbiB3aGVuIHJ1bm5pbmcgdGhlIHNpbSBtYW51YWxseVxuICAgICAgLy8gVE9ETzogZmluZCBhbm90aGVyIHdheSB0byB0cmlnZ2VyIHRoZSBwaGlzaGluZyB3YXJuaW5nIHRoYXQgSVMgZGlzYWJsZWRcbiAgICAgIC8vIGJ5IHRoZSBwcmVmIG9uIGlPUzhcbiAgICAgIGl0KCdzaG91bGQgZGlzcGxheSBhIHBoaXNoaW5nIHdhcm5pbmcgd2l0aCBzYWZhcmlJZ25vcmVGcmF1ZFdhcm5pbmcgQHNraXAtaW9zOCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgZHJpdmVyLnNldFVybChlbnYuUEhJU0hJTkdfRU5EX1BPSU5UICsgJ2d1aW5lYS1waWcyLmh0bWwnKTtcbiAgICAgICAgYXdhaXQgc3BpbldhaXQoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgIChhd2FpdCBkcml2ZXIuZ2V0VGl0bGUoKSkudG9Mb3dlckNhc2UoKS5zaG91bGQuY29udGFpbihcInBoaXNoaW5nXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnZW5hYmxlUGVyZm9ybWFuY2VMb2dnaW5nJywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBzcGVjaWFsQ2FwcyA9IE9iamVjdC5hc3NpZ24oe2VuYWJsZVBlcmZvcm1hbmNlTG9nZ2luZzogdHJ1ZX0sIGRlc2lyZWQpO1xuXG4gICAgY29uc3QgZHJpdmVyID0gc2V0dXAodGhpcywgc3BlY2lhbENhcHMpLmRyaXZlcjtcbiAgICBiZWZvcmUoYXN5bmMgKCkgPT4gYXdhaXQgbG9hZFdlYlZpZXcoc3BlY2lhbENhcHMsIGRyaXZlcikpO1xuXG4gICAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGdldCB0aGUgcGVyZm9ybWFuY2UgbG9ncycsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBsb2dUeXBlcyA9IGF3YWl0IGRyaXZlci5nZXRMb2dUeXBlcygpO1xuICAgICAgbG9nVHlwZXMuc2hvdWxkLmluY2x1ZGUoJ3BlcmZvcm1hbmNlJyk7XG5cbiAgICAgIGxldCBsb2dzID0gYXdhaXQgZHJpdmVyLmdldExvZygncGVyZm9ybWFuY2UnKTtcbiAgICAgIGxvZ3Muc2hvdWxkLmJlLmFuLmluc3RhbmNlb2YoQXJyYXkpO1xuICAgICAgbG9ncy5sZW5ndGguc2hvdWxkLmJlLmFib3ZlKDApO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi8uLiJ9
