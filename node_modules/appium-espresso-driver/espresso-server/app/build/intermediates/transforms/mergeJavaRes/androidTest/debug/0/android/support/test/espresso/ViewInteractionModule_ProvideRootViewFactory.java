package android.support.test.espresso;

import android.support.test.espresso.base.RootViewPicker;
import android.view.View;
import dagger.internal.Factory;
import javax.annotation.Generated;
import javax.inject.Provider;

@Generated("dagger.internal.codegen.ComponentProcessor")
public final class ViewInteractionModule_ProvideRootViewFactory implements Factory<View> {
  private final ViewInteractionModule module;
  private final Provider<RootViewPicker> rootViewPickerProvider;

  public ViewInteractionModule_ProvideRootViewFactory(ViewInteractionModule module, Provider<RootViewPicker> rootViewPickerProvider) {  
    assert module != null;
    this.module = module;
    assert rootViewPickerProvider != null;
    this.rootViewPickerProvider = rootViewPickerProvider;
  }

  @Override
  public View get() {  
    View provided = module.provideRootView(rootViewPickerProvider.get());
    if (provided == null) {
      throw new NullPointerException("Cannot return null from a non-@Nullable @Provides method");
    }
    return provided;
  }

  public static Factory<View> create(ViewInteractionModule module, Provider<RootViewPicker> rootViewPickerProvider) {  
    return new ViewInteractionModule_ProvideRootViewFactory(module, rootViewPickerProvider);
  }
}

