package android.support.test.espresso;

import android.view.View;
import dagger.internal.Factory;
import java.util.concurrent.Executor;
import java.util.concurrent.atomic.AtomicReference;
import javax.annotation.Generated;
import javax.inject.Provider;
import org.hamcrest.Matcher;

@Generated("dagger.internal.codegen.ComponentProcessor")
public final class ViewInteraction_Factory implements Factory<ViewInteraction> {
  private final Provider<UiController> uiControllerProvider;
  private final Provider<ViewFinder> viewFinderProvider;
  private final Provider<Executor> mainThreadExecutorProvider;
  private final Provider<FailureHandler> failureHandlerProvider;
  private final Provider<Matcher<View>> viewMatcherProvider;
  private final Provider<AtomicReference<Matcher<Root>>> rootMatcherRefProvider;

  public ViewInteraction_Factory(Provider<UiController> uiControllerProvider, Provider<ViewFinder> viewFinderProvider, Provider<Executor> mainThreadExecutorProvider, Provider<FailureHandler> failureHandlerProvider, Provider<Matcher<View>> viewMatcherProvider, Provider<AtomicReference<Matcher<Root>>> rootMatcherRefProvider) {  
    assert uiControllerProvider != null;
    this.uiControllerProvider = uiControllerProvider;
    assert viewFinderProvider != null;
    this.viewFinderProvider = viewFinderProvider;
    assert mainThreadExecutorProvider != null;
    this.mainThreadExecutorProvider = mainThreadExecutorProvider;
    assert failureHandlerProvider != null;
    this.failureHandlerProvider = failureHandlerProvider;
    assert viewMatcherProvider != null;
    this.viewMatcherProvider = viewMatcherProvider;
    assert rootMatcherRefProvider != null;
    this.rootMatcherRefProvider = rootMatcherRefProvider;
  }

  @Override
  public ViewInteraction get() {  
    return new ViewInteraction(uiControllerProvider.get(), viewFinderProvider.get(), mainThreadExecutorProvider.get(), failureHandlerProvider.get(), viewMatcherProvider.get(), rootMatcherRefProvider.get());
  }

  public static Factory<ViewInteraction> create(Provider<UiController> uiControllerProvider, Provider<ViewFinder> viewFinderProvider, Provider<Executor> mainThreadExecutorProvider, Provider<FailureHandler> failureHandlerProvider, Provider<Matcher<View>> viewMatcherProvider, Provider<AtomicReference<Matcher<Root>>> rootMatcherRefProvider) {  
    return new ViewInteraction_Factory(uiControllerProvider, viewFinderProvider, mainThreadExecutorProvider, failureHandlerProvider, viewMatcherProvider, rootMatcherRefProvider);
  }
}

