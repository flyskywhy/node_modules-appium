package android.support.test.espresso.base;

import android.support.test.espresso.UiController;
import dagger.internal.Factory;
import javax.annotation.Generated;
import javax.inject.Provider;

@Generated("dagger.internal.codegen.ComponentProcessor")
public final class UiControllerModule_ProvideUiControllerFactory implements Factory<UiController> {
  private final UiControllerModule module;
  private final Provider<UiControllerImpl> uiControllerImplProvider;

  public UiControllerModule_ProvideUiControllerFactory(UiControllerModule module, Provider<UiControllerImpl> uiControllerImplProvider) {  
    assert module != null;
    this.module = module;
    assert uiControllerImplProvider != null;
    this.uiControllerImplProvider = uiControllerImplProvider;
  }

  @Override
  public UiController get() {  
    UiController provided = module.provideUiController(uiControllerImplProvider.get());
    if (provided == null) {
      throw new NullPointerException("Cannot return null from a non-@Nullable @Provides method");
    }
    return provided;
  }

  public static Factory<UiController> create(UiControllerModule module, Provider<UiControllerImpl> uiControllerImplProvider) {  
    return new UiControllerModule_ProvideUiControllerFactory(module, uiControllerImplProvider);
  }
}

