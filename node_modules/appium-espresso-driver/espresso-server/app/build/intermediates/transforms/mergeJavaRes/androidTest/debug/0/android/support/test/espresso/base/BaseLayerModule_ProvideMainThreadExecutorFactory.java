package android.support.test.espresso.base;

import android.os.Looper;
import dagger.internal.Factory;
import java.util.concurrent.Executor;
import javax.annotation.Generated;
import javax.inject.Provider;

@Generated("dagger.internal.codegen.ComponentProcessor")
public final class BaseLayerModule_ProvideMainThreadExecutorFactory implements Factory<Executor> {
  private final BaseLayerModule module;
  private final Provider<Looper> mainLooperProvider;

  public BaseLayerModule_ProvideMainThreadExecutorFactory(BaseLayerModule module, Provider<Looper> mainLooperProvider) {  
    assert module != null;
    this.module = module;
    assert mainLooperProvider != null;
    this.mainLooperProvider = mainLooperProvider;
  }

  @Override
  public Executor get() {  
    Executor provided = module.provideMainThreadExecutor(mainLooperProvider.get());
    if (provided == null) {
      throw new NullPointerException("Cannot return null from a non-@Nullable @Provides method");
    }
    return provided;
  }

  public static Factory<Executor> create(BaseLayerModule module, Provider<Looper> mainLooperProvider) {  
    return new BaseLayerModule_ProvideMainThreadExecutorFactory(module, mainLooperProvider);
  }
}

