package android.support.test.espresso.base;

import dagger.internal.Factory;
import javax.annotation.Generated;
import javax.inject.Provider;

@Generated("dagger.internal.codegen.ComponentProcessor")
public final class BaseLayerModule_ProvideActiveRootListerFactory implements Factory<ActiveRootLister> {
  private final BaseLayerModule module;
  private final Provider<RootsOracle> rootsOracleProvider;

  public BaseLayerModule_ProvideActiveRootListerFactory(BaseLayerModule module, Provider<RootsOracle> rootsOracleProvider) {  
    assert module != null;
    this.module = module;
    assert rootsOracleProvider != null;
    this.rootsOracleProvider = rootsOracleProvider;
  }

  @Override
  public ActiveRootLister get() {  
    ActiveRootLister provided = module.provideActiveRootLister(rootsOracleProvider.get());
    if (provided == null) {
      throw new NullPointerException("Cannot return null from a non-@Nullable @Provides method");
    }
    return provided;
  }

  public static Factory<ActiveRootLister> create(BaseLayerModule module, Provider<RootsOracle> rootsOracleProvider) {  
    return new BaseLayerModule_ProvideActiveRootListerFactory(module, rootsOracleProvider);
  }
}

