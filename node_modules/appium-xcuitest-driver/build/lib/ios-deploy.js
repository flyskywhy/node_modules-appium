'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _teen_process = require('teen_process');

var _appiumSupport = require('appium-support');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _asyncbox = require('asyncbox');

var IOSDEPLOY_PATH = 'ios-deploy';

var IOSDeploy = (function () {
  function IOSDeploy(udid) {
    _classCallCheck(this, IOSDeploy);

    this.udid = udid;
    this.cmd = IOSDEPLOY_PATH; // this.cmd is in accordance with iDevice
  }

  _createClass(IOSDeploy, [{
    key: 'checkStatus',
    value: function checkStatus() {
      return _regeneratorRuntime.async(function checkStatus$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.which(this.cmd));

          case 2:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'remove',
    value: function remove(bundleid) {
      var remove;
      return _regeneratorRuntime.async(function remove$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            remove = ['--uninstall_only', '--id', this.udid, '--bundle_id', bundleid];
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap((0, _teen_process.exec)(this.cmd, remove));

          case 4:
            context$2$0.next = 10;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0['catch'](1);

            _logger2['default'].debug('Stdout: \'' + context$2$0.t0.stdout + '\'. Stderr: \'' + context$2$0.t0.stderr + '\'.');
            throw new Error('Could not remove app: \'' + context$2$0.t0.message + '\'');

          case 10:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 6]]);
    }
  }, {
    key: 'removeApp',
    value: function removeApp(bundleId) {
      return _regeneratorRuntime.async(function removeApp$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.remove(bundleId));

          case 2:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'install',
    value: function install(app) {
      var args;
      return _regeneratorRuntime.async(function install$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            args = ['--id', this.udid, '--bundle', app];
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap((0, _asyncbox.retryInterval)(5, 500, _teen_process.exec, this.cmd, args));

          case 4:
            context$2$0.next = 10;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0['catch'](1);

            _logger2['default'].debug('Stdout: \'' + context$2$0.t0.stdout + '\'. Stderr: \'' + context$2$0.t0.stderr + '\'.');
            throw new Error('Could not install app: \'' + context$2$0.t0.message + '\'');

          case 10:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 6]]);
    }
  }, {
    key: 'isAppInstalled',
    value: function isAppInstalled(bundleid) {
      var isInstalled, _ref, stdout;

      return _regeneratorRuntime.async(function isAppInstalled$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            isInstalled = ['--exists', '--id', this.udid, '--bundle_id', bundleid];
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap((0, _teen_process.exec)(this.cmd, isInstalled));

          case 4:
            _ref = context$2$0.sent;
            stdout = _ref.stdout;
            return context$2$0.abrupt('return', stdout && stdout.indexOf("true") > -1);

          case 9:
            context$2$0.prev = 9;
            context$2$0.t0 = context$2$0['catch'](1);

            // error 255 is just ios-deploy's way of saying it is not installed
            if (context$2$0.t0.code !== 255) {
              _logger2['default'].debug('Error checking install status: \'' + context$2$0.t0.message + '\'');
            }
            return context$2$0.abrupt('return', false);

          case 13:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 9]]);
    }
  }]);

  return IOSDeploy;
})();

exports['default'] = IOSDeploy;
module.exports = exports['default'];

// make sure we actually have the program
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pb3MtZGVwbG95LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OzRCQUFxQixjQUFjOzs2QkFDaEIsZ0JBQWdCOztzQkFDaEIsVUFBVTs7Ozt3QkFDQyxVQUFVOztBQUV4QyxJQUFNLGNBQWMsZUFBZSxDQUFDOztJQUU5QixTQUFTO0FBRUQsV0FGUixTQUFTLENBRUEsSUFBSSxFQUFFOzBCQUZmLFNBQVM7O0FBR1gsUUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7QUFDakIsUUFBSSxDQUFDLEdBQUcsR0FBRyxjQUFjLENBQUM7R0FDM0I7O2VBTEcsU0FBUzs7V0FPSzs7Ozs7NkNBRVYsa0JBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Ozs7Ozs7S0FDekI7OztXQUVZLGdCQUFDLFFBQVE7VUFDaEIsTUFBTTs7OztBQUFOLGtCQUFNLEdBQUcsNkJBQTZCLElBQUksQ0FBQyxJQUFJLGlCQUFpQixRQUFRLENBQUM7Ozs2Q0FFckUsd0JBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUM7Ozs7Ozs7Ozs7QUFFNUIsZ0NBQU8sS0FBSyxnQkFBYSxlQUFJLE1BQU0sc0JBQWUsZUFBSSxNQUFNLFNBQUssQ0FBQztrQkFDNUQsSUFBSSxLQUFLLDhCQUEyQixlQUFJLE9BQU8sUUFBSTs7Ozs7OztLQUU1RDs7O1dBRWUsbUJBQUMsUUFBUTs7Ozs7NkNBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDOzs7Ozs7O0tBQzVCOzs7V0FFYSxpQkFBQyxHQUFHO1VBQ1YsSUFBSTs7OztBQUFKLGdCQUFJLEdBQUcsU0FBUyxJQUFJLENBQUMsSUFBSSxjQUFjLEdBQUcsQ0FBQzs7OzZDQUV6Qyw2QkFBYyxDQUFDLEVBQUUsR0FBRyxzQkFBUSxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQzs7Ozs7Ozs7OztBQUVqRCxnQ0FBTyxLQUFLLGdCQUFhLGVBQUksTUFBTSxzQkFBZSxlQUFJLE1BQU0sU0FBSyxDQUFDO2tCQUM1RCxJQUFJLEtBQUssK0JBQTRCLGVBQUksT0FBTyxRQUFJOzs7Ozs7O0tBRTdEOzs7V0FFb0Isd0JBQUMsUUFBUTtVQUN4QixXQUFXLFFBRVIsTUFBTTs7Ozs7QUFGVCx1QkFBVyxHQUFHLHFCQUFxQixJQUFJLENBQUMsSUFBSSxpQkFBaUIsUUFBUSxDQUFDOzs7NkNBRW5ELHdCQUFLLElBQUksQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDOzs7O0FBQTNDLGtCQUFNLFFBQU4sTUFBTTtnREFDSCxNQUFNLElBQUssTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQUFBQzs7Ozs7OztBQUcvQyxnQkFBSSxlQUFJLElBQUksS0FBSyxHQUFHLEVBQUU7QUFDcEIsa0NBQU8sS0FBSyx1Q0FBb0MsZUFBSSxPQUFPLFFBQUksQ0FBQzthQUNqRTtnREFDTSxLQUFLOzs7Ozs7O0tBRWY7OztTQWhERyxTQUFTOzs7cUJBbURBLFNBQVMiLCJmaWxlIjoibGliL2lvcy1kZXBsb3kuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGVjIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcbmltcG9ydCB7IGZzIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyByZXRyeUludGVydmFsIH0gZnJvbSAnYXN5bmNib3gnO1xuXG5jb25zdCBJT1NERVBMT1lfUEFUSCA9IGBpb3MtZGVwbG95YDtcblxuY2xhc3MgSU9TRGVwbG95IHtcblxuICBjb25zdHJ1Y3RvciAodWRpZCkge1xuICAgIHRoaXMudWRpZCA9IHVkaWQ7XG4gICAgdGhpcy5jbWQgPSBJT1NERVBMT1lfUEFUSDsgLy8gdGhpcy5jbWQgaXMgaW4gYWNjb3JkYW5jZSB3aXRoIGlEZXZpY2VcbiAgfVxuXG4gIGFzeW5jIGNoZWNrU3RhdHVzICgpIHtcbiAgICAvLyBtYWtlIHN1cmUgd2UgYWN0dWFsbHkgaGF2ZSB0aGUgcHJvZ3JhbVxuICAgIGF3YWl0IGZzLndoaWNoKHRoaXMuY21kKTtcbiAgfVxuXG4gIGFzeW5jIHJlbW92ZSAoYnVuZGxlaWQpIHtcbiAgICBsZXQgcmVtb3ZlID0gW2AtLXVuaW5zdGFsbF9vbmx5YCwgYC0taWRgLCB0aGlzLnVkaWQsIGAtLWJ1bmRsZV9pZGAsIGJ1bmRsZWlkXTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZXhlYyh0aGlzLmNtZCwgcmVtb3ZlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhgU3Rkb3V0OiAnJHtlcnIuc3Rkb3V0fScuIFN0ZGVycjogJyR7ZXJyLnN0ZGVycn0nLmApO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgcmVtb3ZlIGFwcDogJyR7ZXJyLm1lc3NhZ2V9J2ApO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHJlbW92ZUFwcCAoYnVuZGxlSWQpIHtcbiAgICBhd2FpdCB0aGlzLnJlbW92ZShidW5kbGVJZCk7XG4gIH1cblxuICBhc3luYyBpbnN0YWxsIChhcHApIHtcbiAgICBjb25zdCBhcmdzID0gW2AtLWlkYCwgdGhpcy51ZGlkLCBgLS1idW5kbGVgLCBhcHBdO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCByZXRyeUludGVydmFsKDUsIDUwMCwgZXhlYywgdGhpcy5jbWQsIGFyZ3MpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgbG9nZ2VyLmRlYnVnKGBTdGRvdXQ6ICcke2Vyci5zdGRvdXR9Jy4gU3RkZXJyOiAnJHtlcnIuc3RkZXJyfScuYCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBpbnN0YWxsIGFwcDogJyR7ZXJyLm1lc3NhZ2V9J2ApO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGlzQXBwSW5zdGFsbGVkIChidW5kbGVpZCkge1xuICAgIGxldCBpc0luc3RhbGxlZCA9IFtgLS1leGlzdHNgLCBgLS1pZGAsIHRoaXMudWRpZCwgYC0tYnVuZGxlX2lkYCwgYnVuZGxlaWRdO1xuICAgIHRyeSB7XG4gICAgICBsZXQge3N0ZG91dH0gPSBhd2FpdCBleGVjKHRoaXMuY21kLCBpc0luc3RhbGxlZCk7XG4gICAgICByZXR1cm4gKHN0ZG91dCAmJiAoc3Rkb3V0LmluZGV4T2YoXCJ0cnVlXCIpID4gLTEpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIC8vIGVycm9yIDI1NSBpcyBqdXN0IGlvcy1kZXBsb3kncyB3YXkgb2Ygc2F5aW5nIGl0IGlzIG5vdCBpbnN0YWxsZWRcbiAgICAgIGlmIChlcnIuY29kZSAhPT0gMjU1KSB7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZyhgRXJyb3IgY2hlY2tpbmcgaW5zdGFsbCBzdGF0dXM6ICcke2Vyci5tZXNzYWdlfSdgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSU9TRGVwbG95O1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
